name: Deploy

on:
  push:
    branches:
      - develop
      - main

permissions: read-all

env:
  SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
  SLACK_SIGNING_SECRET: ${{ secrets.SLACK_SIGNING_SECRET }}
  SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}

jobs:
  production:
    environment: production
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Set app outputs
        id: app
        run: |
          echo "public-path=/react-ui-icheck${{ github.ref != 'refs/heads/main' && '/develop' || '' }}" >> $GITHUB_OUTPUT
          echo "revision=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
      - name: Set docker outputs
        id: docker
        run: |
          echo "cert-path=/home/runner/.docker/deploy" >> $GITHUB_OUTPUT
          echo "image-name=${{ secrets.DOCKER_REGISTRY_HOST }}/react-ui-icheck-website" >> $GITHUB_OUTPUT
          echo "stack-name=${{ secrets.DOCKER_STACK_NAME }}${{ github.ref != 'refs/heads/main' && '_develop' || '' }}" >> $GITHUB_OUTPUT
          echo "traefik-name=${{ secrets.TRAEFIK_NAME }}${{ github.ref != 'refs/heads/main' && '-develop' || '' }}" >> $GITHUB_OUTPUT
      - name: Send Slack notification
        uses: codedsolar/slack-action@v1
        if: ${{ github.event_name != 'pull_request' }}
        id: slack
        with:
          status: in-progress
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to the private registry
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_REGISTRY_HOST }}
          username: ${{ secrets.DOCKER_REGISTRY_USER }}
          password: ${{ secrets.DOCKER_REGISTRY_PASS }}
      - name: Generate an image metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          flavor: latest=${{ github.ref == 'refs/heads/main' && 'true' || 'false' }}
          images: ${{ steps.docker.outputs.image-name }}
          labels: maintainer=victor@popkov.me
      - name: Build an image
        uses: docker/build-push-action@v4
        with:
          build-args: |
            APP_PUBLIC_PATH=${{ steps.app.outputs.public-path }}
            APP_REVISION=${{ steps.app.outputs.revision }}
          cache-from: type=registry,ref=${{ fromJSON(steps.meta.outputs.json).tags[0] }}
          cache-to: type=inline
          context: .
          file: ./Dockerfile
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm/v7
          pull: true
          push: true
          tags: ${{ steps.meta.outputs.tags }}
      - name: Add Docker certificates to access the remote host
        run: |
          mkdir -p "${DOCKER_CERT_PATH}"
          echo "${{ secrets.DOCKER_TLS_CA }}" > "${DOCKER_CERT_PATH}/ca.pem"
          echo "${{ secrets.DOCKER_TLS_CERT }}" > "${DOCKER_CERT_PATH}/cert.pem"
          echo "${{ secrets.DOCKER_TLS_KEY }}" > "${DOCKER_CERT_PATH}/key.pem"
          chmod 400 "${DOCKER_CERT_PATH}/ca.pem"
          chmod 400 "${DOCKER_CERT_PATH}/cert.pem"
          chmod 400 "${DOCKER_CERT_PATH}/key.pem"
        env:
          DOCKER_CERT_PATH: ${{ steps.docker.outputs.cert-path }}
      - name: Deploy Docker Stack
        run: |
          docker stack rm "${DOCKER_STACK_NAME}"
          docker stack deploy \
            --with-registry-auth \
            --resolve-image=always \
            --compose-file=docker-stack.yml \
            --prune \
            "${DOCKER_STACK_NAME}"
        env:
          DOCKER_CERT_PATH: ${{ steps.docker.outputs.cert-path }}
          DOCKER_HOST: ${{ secrets.DOCKER_HOST }}
          DOCKER_IMAGE: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}
          DOCKER_STACK_NAME: ${{ steps.docker.outputs.stack-name }}
          DOCKER_STACK_NODE_HOSTNAME: ${{ secrets.DOCKER_STACK_NODE_HOSTNAME }}
          DOCKER_TLS_VERIFY: 1
          LOKI_PIPELINE_STAGE_FILE: ${{ secrets.LOKI_PIPELINE_STAGE_FILE }}
          LOKI_URL: ${{ secrets.LOKI_URL }}
          NGINX_CONF: ${{ secrets.NGINX_CONF }}
          TRAEFIK_HOSTNAME: github.victorpopkov.com
          TRAEFIK_NAME: ${{ steps.docker.outputs.traefik-name }}
          TRAEFIK_PATH_PREFIX: ${{ steps.app.outputs.public-path }}
      - name: Update Slack notification
        uses: codedsolar/slack-action@v1
        if: ${{ github.event_name != 'pull_request' && always() }}
        with:
          status: ${{ job.status }}
          timestamp: ${{ steps.slack.outputs.slack-timestamp }}
